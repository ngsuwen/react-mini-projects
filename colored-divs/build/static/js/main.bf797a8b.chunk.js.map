{"version":3,"sources":["ColoredDiv.js","App.js","index.js"],"names":["ColoredDiv","props","styles","background","color","style","className","onClick","newArr","colors","splice","index","remove","App","useState","setColors","width","setWidth","arr","useEffect","updateWidth","window","addEventListener","removeEventListener","innerWidth","colorsArr","map","d","i","key","randomIndex","Math","floor","random","length","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"qOA2BeA,G,MAzBI,SAACC,GAElB,IAAIC,EAAS,CACXC,WAAYF,EAAMG,OASpB,OACE,oCACE,yBACEC,MAAOH,EACPI,UAAU,eAETL,EAAMG,MACP,4BAAQG,QAbM,WAClB,IAAMC,EAAM,YAAOP,EAAMQ,QACzBD,EAAOE,OAAOT,EAAMU,MAAO,GAC3BV,EAAMW,OAAOJ,KAUT,cCjBO,SAASK,IACtB,MAA4BC,mBAAS,CAAC,aAAc,OAAQ,cAA5D,mBAAOL,EAAP,KAAeM,EAAf,KACA,EAA0BD,mBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACMC,EAAM,CAAC,aAAc,OAAQ,YAAa,SAAU,SAAU,OAEpEC,qBAAW,WAGT,OAFAC,IACAC,OAAOC,iBAAiB,SAAUF,GAC3B,kBAAMC,OAAOE,oBAAoB,SAAUH,MACjD,IAEH,IAAMA,EAAc,WAClBH,EAASI,OAAOG,aAGZC,EAAYhB,EAAOiB,KAAK,SAACC,EAAEC,GAC/B,OACA,kBAAC,EAAD,CAAYxB,MAAOuB,EAAGE,IAAKD,EAAGjB,MAAOiB,EAAGhB,OAAQG,EAAWN,OAAQA,OASrE,OACE,yBAAKH,UAAU,OACf,qDAA2BU,GAC3B,yBAAKV,UAAU,gBACZmB,GAEH,4BAAQlB,QAZG,WACX,IAAIuB,EAAcC,KAAKC,MAAMD,KAAKE,SAASf,EAAIgB,QAC3C9B,EAAQc,EAAIY,GAChBf,EAAU,GAAD,mBAAKN,GAAL,CAAaL,OAStB,kBC/BJ,IAAM+B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC3B,EAAD,OAEFsB,I","file":"static/js/main.bf797a8b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ColoredDiv = (props) => {\n\n  let styles = {\n    background: props.color\n  }\n\n  const removeHandler=()=>{\n    const newArr = [...props.colors]\n    newArr.splice(props.index, 1)\n    props.remove(newArr)\n  }\n  \n  return (\n    <>\n      <div \n        style={styles}\n        className=\"colored-div\"\n        >\n        {props.color}\n        <button onClick={removeHandler}>Remove</button>\n      </div>\n    </>\n  );\n}\n\nexport default ColoredDiv","import React, {useState, useEffect} from \"react\";\nimport \"./styles.css\";\nimport ColoredDiv from './ColoredDiv'\n\nexport default function App() {\n  const [colors, setColors] = useState(['lightgreen', 'pink', 'lightblue'])\n  const [width, setWidth] = useState(0)\n  const arr = ['lightgreen', 'pink', 'lightblue', 'yellow', 'orange', 'red']\n\n  useEffect( () => {\n    updateWidth();\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, [])\n\n  const updateWidth = () => {\n    setWidth(window.innerWidth)\n  }\n\n  const colorsArr = colors.map( (d,i) => {\n    return (\n    <ColoredDiv color={d} key={i} index={i} remove={setColors} colors={colors}/>)\n  })\n  \n  const addNew=()=>{\n    let randomIndex = Math.floor(Math.random()*arr.length)\n    let color = arr[randomIndex]\n    setColors([...colors, color])\n  }\n\n  return (\n    <div className=\"App\">\n    <h1>Current Window Width: {width}</h1>\n    <div className='colored-divs'>\n      {colorsArr}\n    </div>\n    <button onClick={addNew}>Add New Color</button>\n  </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}