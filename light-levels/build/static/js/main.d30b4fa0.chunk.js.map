{"version":3,"sources":["lightData.js","Components/Controls.js","Components/Light.js","Components/App.js","index.js"],"names":["lightData","name","color","Controls","props","react_default","a","createElement","onClick","click","type","control","payload","index","Lights","styles","width","height","borderRadius","border","background","state","style","levelReducer","action","light","count","App","_useReducer","useReducer","_useReducer2","Object","slicedToArray","level","setLevel","controls","map","d","i","Components_Controls","key","className","Light","rootElement","document","getElementById","ReactDOM","render","Components_App"],"mappings":"gKAOeA,EAAA,CACb,CAACC,KAAM,MAAOC,MAAO,iBACrB,CAACD,KAAM,MAAOC,MAAO,kBACrB,CAACD,KAAM,MAAOC,MAAO,kBACrB,CAACD,KAAM,OAAQC,MAAO,mBCITC,MAZf,SAAkBC,GAOhB,OACIC,EAAAC,EAAAC,cAAA,UAAQC,QAPO,WACjBJ,EAAMK,MAAM,CACRC,KAAKN,EAAMO,QACXC,QAAQZ,EAAUI,EAAMS,WAIMT,EAAMO,UCM7BG,MAff,SAAgBV,GAEd,IAAMW,EAAS,CACbC,MAAO,QACPC,OAAQ,QACRC,aAAc,MACdC,OAAQ,YACRC,WAAYhB,EAAMiB,OAGpB,OACEhB,EAAAC,EAAAC,cAAA,OAAKe,MAAOP,KCRVQ,EAAe,SAACF,EAAOG,GAC3B,OAAQA,EAAOd,MACb,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,OAAQ,MAAO,CAACe,MAAOD,EAAOZ,QAASc,MAAOL,EAAMK,MAAQ,GACjE,IAAK,QAAS,MAAO,CAACD,MAAOD,EAAOZ,QAASc,MAAO,GACpD,QAAS,OAAOL,IAwBLM,MApBf,WACE,IAAAC,EAA0BC,qBAAWN,EAAc,CAACE,MAAMzB,EAAU,GAAI0B,MAAM,IAA9EI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAcI,EAAdJ,EAAA,GACMK,EAAWnC,EAAUoC,IAAI,SAACC,EAAEC,GAChC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,CAAUC,IAAKF,EAAGzB,MAAOyB,EAAG3B,QAAS0B,EAAEpC,KAAMQ,MAAOyB,MAE7D,OACE7B,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACbpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACZN,EACD9B,EAAAC,EAAAC,cAAA,+BAAuB0B,EAAMP,QAE/BrB,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,SACbpC,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAI0B,EAAS,CAACxB,KAAK,QAASE,QAAQZ,EAAU,OAA/D,UAEFK,EAAAC,EAAAC,cAACmC,EAAD,CAAOrB,MAAOY,EAAMR,MAAMvB,UCxB1ByC,SAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASL","file":"static/js/main.d30b4fa0.chunk.js","sourcesContent":["// Here is a list of rgba colors you could uses\n//    'off' - 'rgba(0,0,0,1)'\n//    'low' - 'rgba(0,0,0,.6)'\n//    'medium' - 'rgba(0,0,0,.3)'\n//    'high' - 'rgba(0,0,0,.1)'\n// */\n\nexport default [\n  {name: 'off', color: 'rgba(0,0,0,1)'},\n  {name: 'low', color: 'rgba(0,0,0,.6)'},\n  {name: 'med', color: 'rgba(0,0,0,.4)'},\n  {name: 'high', color: 'rgba(0,0,0,.1)'},\n]","import React from 'react'\nimport lightData from '../lightData'\n\nfunction Controls(props) {\n  const clickHandler=()=>{\n    props.click({\n        type:props.control, \n        payload:lightData[props.index]\n      })\n  }\n  return (    \n      <button onClick={clickHandler}>{props.control}</button>\n  )\n}\n\nexport default Controls","import React from 'react'\n\nfunction Lights(props) {\n\n  const styles = {\n    width: '100px',\n    height: '100px',\n    borderRadius: '50%',\n    border: '1px solid',\n    background: props.state\n  }\n  \n  return (\n    <div style={styles}></div>\n  )\n}\n\nexport default Lights","import React, { useReducer } from \"react\";\nimport Controls from './Controls'\nimport Light from './Light'\nimport lightData from '../lightData'\n\nconst levelReducer = (state, action) => {\n  switch (action.type) {\n    case 'off': return {light: action.payload, count: state.count + 1 }\n    case 'low': return {light: action.payload, count: state.count + 1 }\n    case 'med': return {light: action.payload, count: state.count + 1 }\n    case 'high': return {light: action.payload, count: state.count + 1 }\n    case 'reset': return {light: action.payload, count: 0 }\n    default: return state\n  }\n}\n\nfunction App() {\n  const [level, setLevel] = useReducer(levelReducer, {light:lightData[0], count:0})\n  const controls = lightData.map((d,i)=>{\n    return <Controls key={i} index={i} control={d.name} click={setLevel}/>\n  })\n  return (\n    <div className=\"App\">\n      <div className=\"controls\">\n        {controls}\n        <p>Numbers of clicks: {level.count}</p>\n      </div>\n      <div className=\"reset\">\n        <button onClick={()=>setLevel({type:'reset', payload:lightData[0]})}>Reset</button>\n      </div>\n      <Light state={level.light.color} />\n    </div>\n\n  );\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './Components/App'\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n\n/* INSTRUCTIONS\n1. Fork the codesandbox\n2. Import and use useReducer in App. It should replace\n   the if statements and control state\n3. Make a Controls Component that has 4 buttons\n   â€“ off, low, medium, high\n4. Make the Light Component that will show 4 diff \n  shades of black based on which control button was clicked\n\nHere is a list of rgba colors you could uses\n   'off' - 'rgba(0,0,0,1)'\n   'low' - 'rgba(0,0,0,.6)'\n   'medium' - 'rgba(0,0,0,.3)'\n   'high' - 'rgba(0,0,0,.1)'\n*/"],"sourceRoot":""}