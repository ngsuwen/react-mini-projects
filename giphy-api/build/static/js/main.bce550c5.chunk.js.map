{"version":3,"sources":["Form.jsx","GiphyInfo.jsx","App.js","index.js"],"names":["Form","props","inputRef","useRef","onSubmit","e","preventDefault","handleSubmit","current","value","type","placeholder","ref","giphyInfo","className","src","giphy","alt","gf","GiphyFetch","App","useState","giphyData","setGiphyData","fav","setFav","a","random","response","data","image_url","useEffect","fetchData","tag","GiphyInfo","onClick","alert","ReactDOM","render","document","getElementById"],"mappings":"gSAyBeA,MAvBf,SAAcC,GACZ,IAAMC,EAAWC,mBAQjB,OACE,mCACE,uBAAMC,SARW,SAACC,GACpBA,EAAEC,iBAEFL,EAAMM,aAAaL,EAASM,QAAQC,QAKlC,UACE,uBACEC,KAAK,OACLC,YAAY,yBACZC,IAAKV,IAEP,uBAAOQ,KAAK,iBCTLG,MARf,SAAmBZ,GACjB,OACE,qBAAKa,UAAU,aAAf,SACI,qBAAKC,IAAKd,EAAMe,MAAOC,IAAI,QCC7BC,EAAK,I,MAAIC,YAAW,oCAgDXC,MA9Cf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAFa,4CAIb,4BAAAC,EAAA,sEACyBR,EAAGS,SAD5B,OACQC,EADR,OAEEL,EAAaK,EAASC,KAAKC,WAF7B,4CAJa,kEASb,sBAAAJ,EAAA,sDACEH,EAAaC,GADf,4CATa,sBAkCb,OARAO,qBAAU,WAAM,4CACd,4BAAAL,EAAA,sEACyBR,EAAGS,SAD5B,OACQC,EADR,OAEEL,EAAaK,EAASC,KAAKC,WAF7B,4CADc,uBAAC,WAAD,wBAKdE,KACA,IAGA,sBAAKlB,UAAU,MAAf,UACE,uCACA,cAAC,EAAD,CAAMP,aAnBS,SAAC0B,GAAM,4CACxB,4BAAAP,EAAA,sEACyBR,EAAGS,OAAO,CAACM,IAAIA,IADxC,OACQL,EADR,OAEEL,EAAaK,EAASC,KAAKC,WAF7B,4CADwB,uBAAC,WAAD,wBAKxBE,MAeE,qBAAKlB,UAAU,UAAf,SAAyB,cAACoB,EAAD,CAAWlB,MAAOM,MAC3C,wBAAQa,QAvCC,2CAuCT,wBACA,wBAAQA,QA3BI,WACdV,EAAOH,GACPc,MAAM,WAyBJ,4BACA,wBAAQD,QAzCC,2CAyCT,gCC5CNE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bce550c5.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\n\r\nfunction Form(props) {\r\n  const inputRef = useRef();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    // console.log(inputRef.current.value)\r\n    props.handleSubmit(inputRef.current.value)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder='search a tag (eg. cat)'\r\n          ref={inputRef}\r\n        />\r\n        <input type=\"submit\"/>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\n\r\nfunction giphyInfo(props){\r\n  return (\r\n    <div className='Giphy-data'>\r\n        <img src={props.giphy} alt=''/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default giphyInfo","import React, { useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport Form from './Form';\r\nimport GiphyInfo from './GiphyInfo';\r\nimport {GiphyFetch} from '@giphy/js-fetch-api';\r\n\r\nconst gf = new GiphyFetch('hNzaE7yr0PysdaZGg2y4ckpOWj5MIsrR')\r\n\r\nfunction App() {\r\n  const [giphyData, setGiphyData] = useState({});\r\n  const [fav, setFav] = useState({});\r\n\r\n  async function newApiCall(){\r\n    const response = await gf.random();\r\n    setGiphyData(response.data.image_url);\r\n  }\r\n\r\n  async function viewFavourite(){\r\n    setGiphyData(fav);\r\n  }\r\n\r\n  const favourite=()=>{\r\n    setFav(giphyData)\r\n    alert('Saved!')\r\n  }\r\n\r\n  const handleSubmit=(tag)=>{\r\n    async function fetchData() {\r\n      const response = await gf.random({tag:tag});\r\n      setGiphyData(response.data.image_url);\r\n    }\r\n    fetchData();\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await gf.random();\r\n      setGiphyData(response.data.image_url);\r\n    }\r\n    fetchData();\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Giphy</h1>\r\n      <Form handleSubmit={handleSubmit} />\r\n      <div className='display'><GiphyInfo giphy={giphyData} /></div>\r\n      <button onClick={newApiCall}>Random GIF</button>\r\n      <button onClick={favourite}>Favourite This</button>\r\n      <button onClick={viewFavourite}>View Favourite</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}